// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#include "plugins/SGIHostItemGenerator"

class QWidget;

namespace sgi {

class SGIItemBase;
class SGIHostItemBase;
typedef QWidget * QWidgetPtr;

template<typename AUTOLOADCLASS>
inline QWidget * parentWidgetImpl(const SGIHostItemBase * object)
{
    ISceneGraphDialog * ret;
    typedef ISceneGraphDialog * (*pfn)(QWidgetPtr & widget, const SGIHostItemBase * object);
    pfn func = (pfn)AUTOLOADCLASS::sgiLibraryProcAddress("sgi_parentWidget");
    if(func)
        ret = func(widget, object);
    else
        ret = nullptr;
    return ret;
}

template<typename AUTOLOADCLASS>
inline QWidget * parentWidgetImpl(SGIItemBase * item)
{
    QWidget * ret = nullptr;
    typedef QWidget * (*pfn)(QWidgetPtr & widget, SGIItemBase * item);
    pfn func = (pfn)AUTOLOADCLASS::sgiLibraryProcAddress("sgi_parentWidgetItem");
    if(func)
        ret = func(widget, item);
    else
        ret = nullptr;
    return ret;
}

template<typename AUTOLOADCLASS, typename OBJECT_TYPE>
inline QWidget * parentWidget(OBJECT_TYPE * object)
{
    SGIHostItemBasePtr hostitem = SGIHostItemGenerator::generateHostItem(object);
    ISceneGraphDialog * ret = parentWidgetImpl<AUTOLOADCLASS>(parent, hostitem.get(), info);
    return ret;
}

template<typename AUTOLOADCLASS>
inline QWidget * parentWidget(SGIItemBase * item)
{
    QWidget * ret = parentWidgetImpl<AUTOLOADCLASS>(item);
    return ret;
}

template<typename AUTOLOADCLASS>
inline QWidget * showSceneGraphDialog(const SGIHostItemBase * item)
{
    QWidget * ret = parentWidgetImpl<AUTOLOADCLASS>(item);
    return ret;
}

} // namespace sgi
