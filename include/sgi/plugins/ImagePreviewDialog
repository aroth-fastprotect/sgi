// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once
#include "HostCallback"

class QWidget;
class QDialog;

namespace sgi {

class Image;
typedef details::ref_ptr<Image> ImagePtr;
typedef details::ref_ptr<const Image> ConstImagePtr;
class IContextMenu;
class SGIItemBase;
class SGIHostItemBase;
typedef details::ref_ptr<SGIItemBase> SGIItemBasePtr;

class IImagePreviewDialog : public details::Referenced
{
public:
    virtual QDialog *       getDialog() = 0;
    virtual IHostCallback * getHostCallback() = 0;
    virtual void            setObject(SGIItemBase * item, IHostCallback * callback=nullptr) = 0;
    virtual void            setObject(const SGIHostItemBase * item, IHostCallback * callback=nullptr) = 0;
    virtual void            setObject(SGIItemBase * item, const sgi::Image * image, const std::string & description, IHostCallback * callback=nullptr) = 0;
    virtual void            setImage(const sgi::Image * image) = 0;
    virtual void            setDescription(const std::string & description) = 0;
    virtual void            show() = 0;
    virtual void            hide() = 0;
    virtual bool            isVisible() = 0;
    virtual SGIItemBase *   item() const = 0;
};

typedef details::ref_ptr<IImagePreviewDialog> IImagePreviewDialogPtr;

} // namespace sgi
