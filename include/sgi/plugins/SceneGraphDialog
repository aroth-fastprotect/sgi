// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#include "HostCallback"
#include <vector>
#include <sgi/details/Referenced>

class QWidget;
class QDialog;

namespace sgi {

class IHostCallback;
class IContextMenu;
class IObjectTreeItem;

class SGIItemBase;
typedef details::ref_ptr<SGIItemBase> SGIItemBasePtr;
typedef std::vector<SGIItemBasePtr> SGIItemBasePtrPath;
class SGIHostItemBase;

class ISceneGraphDialog : public details::Referenced
{
public:
    virtual                 ~ISceneGraphDialog() override {}
    virtual QDialog *       getDialog() = 0;
    virtual IHostCallback * getHostCallback() = 0;
    virtual IContextMenu *  toolsMenu() = 0;
    virtual void            setObject(SGIItemBase * item, IHostCallback * callback=nullptr) = 0;
    virtual void            setObject(const SGIHostItemBase * item, IHostCallback * callback=nullptr) = 0;
    virtual void            show() = 0;
    virtual void            hide() = 0;
    virtual bool            isVisible() = 0;
    virtual IObjectTreeItem * selectedItem() = 0;
    virtual IObjectTreeItem * rootItem() = 0;
    virtual void            setInfoText(const std::string & text) = 0;
	virtual SGIItemBase *   item() const = 0;
	virtual const SGIItemBasePtrPath & itemPath() const = 0;
};

typedef details::ref_ptr<ISceneGraphDialog> ISceneGraphDialogPtr;

class ISceneGraphDialogToolsMenu : public details::Referenced
{
public:
    virtual                     ~ISceneGraphDialogToolsMenu() override {}
    virtual ISceneGraphDialog * getDialog() = 0;
    virtual IContextMenu *      toolsMenu() = 0;
};

typedef details::ref_ptr<ISceneGraphDialogToolsMenu> ISceneGraphDialogToolsMenuPtr;

} // namespace sgi
