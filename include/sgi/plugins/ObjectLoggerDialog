// kate: syntax C++11;
// SGI - Copyright (C) 2012-2015 FAST Protect, Andreas Roth

#pragma once

#include <sgi/details/Object>
#include <list>

class QWidget;
class QDialog;

namespace sgi {

class IContextMenu;
class SGIItemBase;
class SGIHostItemBase;
class SGIDataItemBase;
typedef details::ref_ptr<SGIItemBase> SGIItemBasePtr;
typedef details::ref_ptr<SGIDataItemBase> SGIDataItemBasePtr;
typedef std::list<SGIDataItemBasePtr> SGIDataItemBasePtrList;
typedef std::vector<SGIItemBasePtr> SGIItemBasePtrPath;
typedef std::vector<SGIItemBasePtr> SGIItemBasePtrVector;
class IHostCallback;

class IObjectLoggerDialog : public details::Referenced
{
public:
    virtual QDialog *       getDialog() = 0;
    virtual IHostCallback * getHostCallback() = 0;
    virtual bool            addItem(SGIItemBase * item, bool alsoChilds=true) = 0;
    virtual bool            addItems(const SGIItemBasePtrPath & path) = 0;
    virtual bool            removeItem(SGIItemBase * item) = 0;
    virtual bool            removeItems(const SGIItemBasePtrPath & path) = 0;
    virtual void            show() = 0;
    virtual void            hide() = 0;
    virtual bool            isVisible() = 0;

    virtual bool            addLogItem(SGIDataItemBase * item) = 0;
    virtual bool            removeLogItem(SGIDataItemBase * item, bool first) = 0;
};

typedef details::ref_ptr<IObjectLoggerDialog> IObjectLoggerDialogPtr;

class IObjectLogger : public details::Object
{
public:
    IObjectLogger() : details::Object() {}
    IObjectLogger(const IObjectLogger & rhs) : Object(rhs) {}
    virtual bool                addItem(SGIItemBase * item, bool alsoChilds=true) = 0;
    virtual bool                addItems(const SGIItemBasePtrPath & path) = 0;
    virtual bool                removeItem(SGIItemBase * item) = 0;
    virtual bool                removeItems(const SGIItemBasePtrPath & path) = 0;
    virtual bool                isItemPresent(SGIItemBase * item) const = 0;
    virtual bool                getItems(SGIItemBasePtrVector & vector) = 0;
    virtual bool                getFields(SGIDataItemBasePtr & fields) = 0;
    virtual bool                getLog(SGIDataItemBasePtrList & list) = 0;

    virtual bool                addLogItem(SGIDataItemBase * item) = 0;

    virtual IObjectLoggerDialog * getDialog() = 0;
    virtual IObjectLoggerDialog * getOrCreateDialog(QWidget *parent, IHostCallback * callback) = 0;
};

typedef details::ref_ptr<IObjectLogger> IObjectLoggerPtr;

} // namespace sgi
