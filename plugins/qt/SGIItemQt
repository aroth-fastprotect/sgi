// kate: syntax C++;
// SGI - Copyright (C) 2012-2018 FAST Protect, Andreas Roth

#pragma once
#include <sgi/plugins/SGIItemBase.h>
#include <QtCore/QSharedPointer>
#include <QtGui/QPaintDevice>
#include <QtGui/QIcon>
#include <QtGui/QSurface>

namespace sgi {

typedef SGIItemInfoPlainPtr<QObject> SGIItemInfoQt;
typedef SGIItemInfoPlainPtr<QMetaObject> SGIItemInfoQtMeta;
typedef SGIItemInfoSharedPtrQt<QPaintDevice, QSharedPointer<QPaintDevice> > SGIItemInfoQtPaintDevice;
typedef SGIItemInfoSharedPtrQt<QSurface, QSharedPointer<QSurface> > SGIItemInfoQtSurface;
typedef SGIItemInfoPlainPtr<QIcon> SGIItemInfoQtIcon;

typedef SGIHostItemImpl<SGIItemInfoQt> SGIHostItemQt;
typedef SGIHostItemImpl<SGIItemInfoQtMeta> SGIHostItemQtMeta;
typedef SGIHostItemImpl<SGIItemInfoQtPaintDevice> SGIHostItemQtPaintDevice;
typedef SGIHostItemImpl<SGIItemInfoQtSurface> SGIHostItemQtSurface;

//typedef SGIHostItemImpl<QIcon> SGIHostItemQtIcon;
class SGIHostItemQtIcon;

typedef SGIItemHolderT<SGIItemInfoQt> SGIItemHolderQt;
typedef SGIItemHolderT<SGIItemInfoQtMeta> SGIItemHolderQtMeta;
typedef SGIItemHolderT<SGIItemInfoQtPaintDevice> SGIItemHolderQtPaintDevice;
typedef SGIItemHolderT<SGIItemInfoQtSurface> SGIItemHolderQtSurface;
typedef SGIItemHolderT<SGIItemInfoQtIcon> SGIItemHolderQtIcon;

typedef SGIItemT<SGIHostItemQt, SGIItemHolderQt> SGIItemQt;
typedef SGIItemT<SGIHostItemQtMeta, SGIItemHolderQtMeta> SGIItemQtMeta;
typedef SGIItemT<SGIHostItemQtPaintDevice, SGIItemHolderQtPaintDevice> SGIItemQtPaintDevice;
typedef SGIItemT<SGIHostItemQtSurface, SGIItemHolderQtSurface> SGIItemQtSurface;
typedef SGIItemT<SGIHostItemQtIcon, SGIItemHolderQtIcon> SGIItemQtIcon;

enum SGIItemType_qt
{
    SGIItemType_plugin_qt = SGIItemTypePluginBaseQt,
    SGIItemTypeMethods,
    SGIItemTypeWidgets,
    SGIItemTypeSurfaceFormat,
    SGIItemTypeContext,
    SGIItemTypeContextExtensions,
    SGIItemTypeSurface,
    SGIItemTypeProperties,
    SGIItemTypeSystemEnvironment,
    SGIItemTypeShaderProgramShaders,
    SGIItemTypeShaderSourceCode,
    SGIItemTypeShaderLog,
    SGIItemTypePalette,
};

} // namespace sgi
